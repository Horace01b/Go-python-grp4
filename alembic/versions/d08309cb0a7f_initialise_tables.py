"""Initialise tables

Revision ID: d08309cb0a7f
Revises: a35f8381b6cb
Create Date: 2025-08-27 17:08:21.303168

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd08309cb0a7f'
down_revision: Union[str, Sequence[str], None] = 'a35f8381b6cb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('game', sa.Column('black_player_id', sa.BIGINT(), nullable=False))
    op.add_column('game', sa.Column('white_player_id', sa.BIGINT(), nullable=False))
    op.add_column('game', sa.Column('board', sa.JSON(), nullable=False))
    op.add_column('game', sa.Column('captured_black', sa.BIGINT(), nullable=True))
    op.add_column('game', sa.Column('captured_white', sa.BIGINT(), nullable=True))
    op.add_column('game', sa.Column('won_by', sa.String(), nullable=True))
    op.drop_constraint(op.f('game_player_id_fkey'), 'game', type_='foreignkey')
    op.create_foreign_key(None, 'game', 'player', ['white_player_id'], ['id'])
    op.create_foreign_key(None, 'game', 'player', ['black_player_id'], ['id'])
    op.drop_column('game', 'character')
    op.drop_column('game', 'won')
    op.drop_column('game', 'player_id')
    op.drop_column('game', 'dragon_type')
    op.add_column('player', sa.Column('name', sa.String(), nullable=False))
    op.drop_constraint(op.f('player_u_name_key'), 'player', type_='unique')
    op.create_unique_constraint(None, 'player', ['name'])
    op.drop_column('player', 'u_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('player', sa.Column('u_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'player', type_='unique')
    op.create_unique_constraint(op.f('player_u_name_key'), 'player', ['u_name'], postgresql_nulls_not_distinct=False)
    op.drop_column('player', 'name')
    op.add_column('game', sa.Column('dragon_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('game', sa.Column('player_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('game', sa.Column('won', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('game', sa.Column('character', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'game', type_='foreignkey')
    op.drop_constraint(None, 'game', type_='foreignkey')
    op.create_foreign_key(op.f('game_player_id_fkey'), 'game', 'player', ['player_id'], ['id'])
    op.drop_column('game', 'won_by')
    op.drop_column('game', 'captured_white')
    op.drop_column('game', 'captured_black')
    op.drop_column('game', 'board')
    op.drop_column('game', 'white_player_id')
    op.drop_column('game', 'black_player_id')
    # ### end Alembic commands ###
